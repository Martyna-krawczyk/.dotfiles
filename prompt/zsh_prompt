#!/bin/zsh

# TODO set history path

# options
setopt PROMPT_SUBST       # bash compatibility. If the PROMPT_SUBST option is set, the prompt string is first subjected to parameter expansion, command substitution and arithmetic expansion
setopt NO_BEEP

setopt INC_APPEND_HISTORY # works like APPEND_HISTORY except that new history lines are added to the $HISTFILE incrementally (as soon as they are entered), rather than waiting until the shell exits.
setopt EXTENDED_HISTORY   # Save each command’s beginning timestamp (in seconds since the epoch) and the duration (in seconds) to the history file.
setopt CORRECT            # Try to correct the spelling of commands.
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_SPACE

setopt PATH_DIRS          # Perform a path search even on command names with slashes in them. Thus if ‘/usr/local/bin’ is in the user’s path, and he or she types ‘X11/xinit’, the command ‘/usr/local/bin/X11/xinit’ will be executed (assuming it exists).

autoload -U colors        # The usual alias expansion during reading will be suppressed if the autoload builtin or its equivalent is given the option -U. This is recommended for the use of functions supplied with the zsh distribution.
colors                    # red, blue, green, cyan, yellow, magenta, black, & white

# https://zsh.sourceforge.io/Doc/Release/User-Contributions.html#Version-Control-Information

autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' actionformats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '          # special action going on in your current repository; like an interactive rebase or a merge conflict.
zstyle ':vcs_info:*' formats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '                             # A list of formats, used when actionformats is not used (which is most of the time).

precmd() {
    vcs_info
}

autoload -U promptinit && promptinit

PROMPT='%B'                          # bold start
PROMPT+='%F{cyan}'$USER'%f'          # print user
PROMPT+='%F{magenta} %~% %f '        # print path
PROMPT+='${vcs_info_msg_0_}'         # print git info
PROMPT+='%{$fg[blue]% > '            # end prompt
PROMPT+='%b'                         # bold end                       